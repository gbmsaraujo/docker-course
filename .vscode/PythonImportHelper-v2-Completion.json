[
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "app",
        "importPath": "src.main",
        "description": "src.main",
        "isExtraImport": true,
        "detail": "src.main",
        "documentation": {}
    },
    {
        "label": "app",
        "importPath": "src.main",
        "description": "src.main",
        "isExtraImport": true,
        "detail": "src.main",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "shutil",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "shutil",
        "description": "shutil",
        "detail": "shutil",
        "documentation": {}
    },
    {
        "label": "randint",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "hello",
        "kind": 2,
        "importPath": "01-basics.api_application.src.main",
        "description": "01-basics.api_application.src.main",
        "peekOfCode": "def hello():\n    return render_template(\"home.html\")\n@app.route(\"/send-name\",methods=['GET', 'POST'])\ndef send_name():\n    name_input = request.form['input-name']\n    return render_template(\"home.html\", name=name_input)",
        "detail": "01-basics.api_application.src.main",
        "documentation": {}
    },
    {
        "label": "send_name",
        "kind": 2,
        "importPath": "01-basics.api_application.src.main",
        "description": "01-basics.api_application.src.main",
        "peekOfCode": "def send_name():\n    name_input = request.form['input-name']\n    return render_template(\"home.html\", name=name_input)",
        "detail": "01-basics.api_application.src.main",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "01-basics.api_application.src.main",
        "description": "01-basics.api_application.src.main",
        "peekOfCode": "app = Flask(__name__)\n@app.route(\"/\")\ndef hello():\n    return render_template(\"home.html\")\n@app.route(\"/send-name\",methods=['GET', 'POST'])\ndef send_name():\n    name_input = request.form['input-name']\n    return render_template(\"home.html\", name=name_input)",
        "detail": "01-basics.api_application.src.main",
        "documentation": {}
    },
    {
        "label": "hello",
        "kind": 2,
        "importPath": "02-volumes.generate_files_app.src.main",
        "description": "02-volumes.generate_files_app.src.main",
        "peekOfCode": "def hello():\n    return render_template(\"home.html\")\n@app.route(\"/create\", methods=[\"GET\", \"POST\"])\ndef create():\n    if request.method == \"GET\":\n        return \"Retorne para o /\"\n    title = request.form[\"title\"]\n    text = request.form[\"text\"]\n    temp_path = os.path.join(os.path.abspath(\"./src/temp\"), f\"{title.lower()}.txt\")\n    final_path = os.path.join(os.path.abspath(\"./src/feedback\"), f\"{title.lower()}.txt\")",
        "detail": "02-volumes.generate_files_app.src.main",
        "documentation": {}
    },
    {
        "label": "create",
        "kind": 2,
        "importPath": "02-volumes.generate_files_app.src.main",
        "description": "02-volumes.generate_files_app.src.main",
        "peekOfCode": "def create():\n    if request.method == \"GET\":\n        return \"Retorne para o /\"\n    title = request.form[\"title\"]\n    text = request.form[\"text\"]\n    temp_path = os.path.join(os.path.abspath(\"./src/temp\"), f\"{title.lower()}.txt\")\n    final_path = os.path.join(os.path.abspath(\"./src/feedback\"), f\"{title.lower()}.txt\")\n    with open(temp_path, \"w\") as temp_file:\n        temp_file.write(text)\n    if os.path.exists(final_path):",
        "detail": "02-volumes.generate_files_app.src.main",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "02-volumes.generate_files_app.src.main",
        "description": "02-volumes.generate_files_app.src.main",
        "peekOfCode": "app = Flask(__name__)\n@app.route(\"/\")\ndef hello():\n    return render_template(\"home.html\")\n@app.route(\"/create\", methods=[\"GET\", \"POST\"])\ndef create():\n    if request.method == \"GET\":\n        return \"Retorne para o /\"\n    title = request.form[\"title\"]\n    text = request.form[\"text\"]",
        "detail": "02-volumes.generate_files_app.src.main",
        "documentation": {}
    },
    {
        "label": "min_number",
        "kind": 5,
        "importPath": "interative_app.rng",
        "description": "interative_app.rng",
        "peekOfCode": "min_number = int(input(\"Please enter the min number: \"))\nmax_number = int(input(\"Please enter the max number: \"))\nif max_number < min_number:\n    print(\"Invalid input - shutting down...\")\nelse:\n    rnd_number = randint(min_number, max_number)\n    print(rnd_number)",
        "detail": "interative_app.rng",
        "documentation": {}
    },
    {
        "label": "max_number",
        "kind": 5,
        "importPath": "interative_app.rng",
        "description": "interative_app.rng",
        "peekOfCode": "max_number = int(input(\"Please enter the max number: \"))\nif max_number < min_number:\n    print(\"Invalid input - shutting down...\")\nelse:\n    rnd_number = randint(min_number, max_number)\n    print(rnd_number)",
        "detail": "interative_app.rng",
        "documentation": {}
    }
]